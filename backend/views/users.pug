extends layout

block content
  div#users
    .row
      .col-xs-12
        .page-header
          h1 Users 
            small ({{users.length}})
      .col-xs-12
        form.form-horizontal.form-group
          .input-group
            .input-group-addon
              +fa('search')
            input(v-model='filter', type='text', class='form-control', placeholder='Find users')
            .input-group-btn
              a.btn.btn-danger(v-on:click='reset()')
                +fa('trash')
      .col-md-4.col-xs-12
        .panel(v-bind:class='user.class')
          .panel-heading
            .panel-title
              +fa('plus') Random data
          .panel-body
            form.form-horizontal
              .form-group
                .col-xs-3
                  label(class='control-label') Firstname
                .col-xs-9
                  input(v-model='user.firstname', type='text', class='form-control', disabled)
              .form-group
                .col-xs-3
                  label(class='control-label') Lastname
                .col-xs-9
                  input(v-model='user.lastname', type='text', class='form-control', disabled)
              .form-group
                .col-xs-3
                  label(class='control-label') Email
                .col-xs-9
                  input(v-model='user.email', type='text', class='form-control', disabled)
              .form-group
                .col-xs-3
                  label(class='control-label') Class
                .col-xs-9
                  select(v-model='user.class', class='form-control')
                    option(v-for='color in colors') {{color}}
            button(v-on:click="create()", class='btn btn-success btn-block')
              +fa('plus') Add 1 user!
            button(v-on:click="clear()", class='btn btn-danger btn-block')
              +fa('trash') Remove all users!
      .col-md-4.col-xs-12(v-for='item in filtered')
        .panel(v-bind:class='item.class')
          .panel-heading
            .panel-title
              +fa('user') {{item.id}}
          .panel-body
            form(v-on:change='update(item)', class='form-horizontal', data-toggle='validator', v-bind:id='item.id')
              .form-group(class='has-feedback')
                .col-xs-3
                  label(class='control-label') Firstname
                .col-xs-9
                  input(v-model='item.firstname', type='text', class='form-control', required, data-minlength='5')
                  span(class='glyphicon form-control-feedback')
                  .help-block.with-errors
              .form-group(class='has-feedback')
                .col-xs-3
                  label(class='control-label') Lastname
                .col-xs-9
                  input(v-model='item.lastname', type='text', class='form-control', required, data-minlength='5')
                  span(class='glyphicon form-control-feedback')
                  .help-block.with-errors
              .form-group(class='has-feedback')
                .col-xs-3
                  label(class='control-label') Email
                .col-xs-9
                  input(v-model='item.email', type='text', class='form-control', required, data-minlength='5')
                  span(class='glyphicon form-control-feedback')
                  .help-block.with-errors
              .form-group
                .col-xs-3
                  label(class='control-label') Class
                .col-xs-9
                  select(v-model='item.class', class='form-control')
                    option(v-for='color in colors') {{color}}
              .form-group
                .col-xs-3
                  label(class='control-label') CreatedAt
                .col-xs-9
                  input(v-model='item.createdAt', type='text', class='form-control', disabled)
              .form-group
                .col-xs-3
                  label(class='control-label') UpdatedAt
                .col-xs-9
                  input(v-model='item.updatedAt', type='text', class='form-control', disabled)
            button(v-on:click='remove(item)', class='btn btn-danger btn-block')
              +fa('trash') Remove me!
        
block javascripts
  script.
    var users = new Vue({
      el: '#users',
      data: {
        filter: '',
        users: [],
        user: {
          firstname: 'Firstname',
          lastname: 'Lastname',
          email: 'Email',
          class: 'panel-primary'
        },
        colors: [
          'panel-primary',
          'panel-warning',
          'panel-info',
          'panel-success',
          'panel-primary'
        ]
      },
      mounted: function() {
        self = this;
        //self.clear();
        self.get();
        self.randomize();
      },
      watch: {
        users: function() {
          setTimeout(function(){
            $('select').selectpicker('refresh');
            $('form').validator('validate');
          }, 0);
        }
      },
      methods: {
        randomize: function() {
          self.user.firstname = Math.random().toString(36).substr(2, 20);
          self.user.lastname = Math.random().toString(36).substr(2, 20);
          self.user.email = Math.random().toString(36).substr(2, 5) + '@' + Math.random().toString(36).substr(2, 5) + '.com';
          self.user.class = self.colors[Math.floor(Math.random() * self.colors.length)];
        },
        get: function() {
          $.get('/api/users', function(results) {
            self.users = results.data;
            notification.info('Users loaded from database!')
          });
        },
        remove: function(user) {
          $.delete('/api/users/' + user.id, null, function(results) {
            self.users.splice(self.users.indexOf(user), 1);
            notification.danger('User deleted!');
          });
        },
        create: function() {
          $.post('/api/users', self.user, function(results) {
            self.users.push(results.data);
          });
          notification.success('User created!');
          self.randomize();
        },
        clear: function() {
          $.delete('/api/users', null, function(results) {
            self.users = [];
          });
          notification.danger('All users have been cleared!');
        },
        update: function(user) {
          if (!self.valid(user.id)) {
            notification.warning('Form error!');
          } else {
            $.put('/api/users/' + user.id, user, function(results) {
              self.users.splice(self.users.indexOf(user), 1, results.data);
              notification.info('User updated!');
            });
          }
        },
        reset: function() {
          self.filter = '';
        },
        valid: function(id) {
          return $('#' + id).has('.has-error').length === 0;
        }
      },
      computed: {
        filtered: function() {
          return this.users.filter(function(user) {
            return (user.firstname.indexOf(self.filter) !== -1 || user.lastname.indexOf(self.filter) !== -1 || user.email.indexOf(self.filter) !== -1 || user.class.indexOf(self.filter) !== -1);
          });
        }
      }
    });