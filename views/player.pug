extends layout

block content
  div#player
    .row
      .col-xs-12
        .page-header
          h1 Character 
            small Yourself
      .col-md-4.col-xs-12
        .panel.panel-default.text-center
          .panel-heading
            .panel-title
              i.fa.fa-fw.fa-lg.fa-user
              span {{name}} 
              label.badge {{level}}
          .panel-body
            img.thumbnail.item(v-bind:src='"/images/player/" + image + ".png"')
            hr
            .progress
              .progress-bar.progress-bar-default(v-bind:style='"width: " + experience * 100 / (level * 1000) + "%"')
            .progress
              .progress-bar.progress-bar-warning(v-bind:style='"width: " + strength + "%"')
            .progress
              .progress-bar.progress-bar-primary(v-bind:style='"width: " + intelligence + "%"')
            .progress
              .progress-bar.progress-bar-danger(v-bind:style='"width: " + vitality + "%"')
            .progress
              .progress-bar.progress-bar-success(v-bind:style='"width: " + agility + "%"')
            .progress
              .progress-bar.progress-bar-info(v-bind:style='"width: " + defense + "%"')
            hr
            .row
              .col-md-4.col-xs-12(v-for='resource in resources')
                img.thumbnail.resource(v-bind:src='"/images/resources/" + resource.image + ".png"', v-bind:class='"panel-" + resource.rarity', data-toggle='tooltip', v-bind:title='resource.name')
                label.badge {{resource.PlayerResource.quantity}}
      .col-md-4.col-xs-12
        .panel.panel-default.text-center
          .panel-heading
            .panel-title
              i.fa.fa-fw.fa-lg.fa-wrench
              span Equipment 
              label.badge {{items.length}}
          .panel-body
            .row
              .col-md-4.col-xs-12(v-for='item in equiped')
                img.thumbnail.item(v-bind:src='"/images/items/" + item.type + "/" + item.image + ".png"', v-bind:class='"panel-" + item.rarity', data-toggle='tooltip', v-bind:title='item.name')
                .progress
                  .progress-bar.progress-bar-warning(v-bind:style='"width: " + item.strength * 10 + "%"')
                .progress
                  .progress-bar.progress-bar-primary(v-bind:style='"width: " + item.intelligence * 10 + "%"')
                .progress
                  .progress-bar.progress-bar-danger(v-bind:style='"width: " + item.vitality * 10 + "%"')
                .progress
                  .progress-bar.progress-bar-success(v-bind:style='"width: " + item.agility * 10 + "%"')
                .progress
                  .progress-bar.progress-bar-info(v-bind:style='"width: " + item.defense * 10 + "%"')
            hr
            .row
              .col-md-4.col-xs-12(v-for='item in unequiped')
                img.thumbnail.item(v-bind:src='"/images/items/" + item.type + "/" + item.image + ".png"', v-bind:class='"panel-" + item.rarity', data-toggle='tooltip', v-bind:title='item.name')
                .progress
                  .progress-bar.progress-bar-warning(v-bind:style='"width: " + item.strength * 10 + "%"')
                .progress
                  .progress-bar.progress-bar-primary(v-bind:style='"width: " + item.intelligence * 10 + "%"')
                .progress
                  .progress-bar.progress-bar-danger(v-bind:style='"width: " + item.vitality * 10 + "%"')
                .progress
                  .progress-bar.progress-bar-success(v-bind:style='"width: " + item.agility * 10 + "%"')
                .progress
                  .progress-bar.progress-bar-info(v-bind:style='"width: " + item.defense * 10 + "%"')
      .col-md-4.col-xs-12
        .panel.panel-default.text-center
          .panel-heading
            .panel-title
              i.fa.fa-fw.fa-lg.fa-magic
              span Spells 
              label.badge {{spells.length}}
          .panel-body
            .row
              .col-md-4.col-xs-12(v-for='spell in spells')
                img.thumbnail.spell(v-bind:src='"/images/spells/" + spell.type + "/" + spell.image + ".png"', v-bind:class='"panel-" + spell.family', data-toggle='tooltip', v-bind:title='spell.name')
                .progress
                  .progress-bar.progress-bar-danger(v-bind:style='"width: " + spell.damage * 10 + "%"')
                .progress
                  .progress-bar.progress-bar-success(v-bind:style='"width: " + spell.heal * 10 + "%"')
                .progress
                  .progress-bar.progress-bar-primary(v-bind:style='"width: " + spell.mana * 10 + "%"')
        
block javascripts
  script.
    var player = new Vue({
      el: '#player',
      data: {
        name: '',
        items: [],
        spells: [],
        resources: [],
        image: '',
        level: 0,
        experience: 0,
        gold: 0
      },
      mounted: function() {
        self = this;
        self.get();
      },
      methods: {
        get: function() {
          $.get('/api/player/1', function(results) {
            self.items = results.data.Items;
            self.spells = results.data.Spells;
            self.resources = results.data.Resources;
            self.name = results.data.name;
            self.level = results.data.level;
            self.experience = results.data.experience;
            self.gold = results.data.gold;
            self.image = results.data.image;
            console.log(self.items);
            notification.info('Player loaded from database!')
          });
        }
      },
      computed: {
        strength: function() {
          var str = self.level;
          for(i=0;i<self.equiped.length;i++) {
            str += self.equiped[i].strength;
          }
          return str;
        },
        vitality: function() {
          var vit = self.level;
          for(i=0;i<self.equiped.length;i++) {
            vit += self.equiped[i].vitality;
          }
          return vit;
        },
        intelligence: function() {
          var int = self.level;
          for(i=0;i<self.equiped.length;i++) {
            int += self.equiped[i].intelligence;
          }
          return int;
        },
        agility: function() {
          var agi = self.level;
          for(i=0;i<self.equiped.length;i++) {
            agi += self.equiped[i].agility;
          }
          return agi;
        },
        defense: function() {
          var def = self.level;
          for(i=0;i<self.equiped.length;i++) {
            def += self.equiped[i].defense;
          }
          return def;
        },
        equiped: function() {
          return this.items.filter(function(item) {
            return item.PlayerItem.equiped;
          });
        },
        unequiped: function() {
          return this.items.filter(function(item) {
            return !item.PlayerItem.equiped;
          });
        }
      }
    });